@startuml class_diagram

package "Window" {
    class AppWindow {
        - app_stack: Gtk::Stack
        - home_box: HomeBox
        - quiz_box: QuizBox

        + AppWindow()
        - onHomeBoxClicked(GdkEventButton*): bool
        - onQuizBoxClicked(GdkEventButton*): bool
    }

    class HomeBox {
        - quiz_set_button_box: Gtk::Box
        - quiz_set_button_vector: std::vector<Gtk::Button>
        - vertical_separator: Gtk::Separator
        - option_button_box: Gtk::Box
        - option_button_vector: std::vector<CheckButtonWithKey>
        - _filepath: Glib::ustring

        + HomeBox()
        + getFilepath(): Glib::ustring
        + getActive(key: CheckButtonWithKey::Key): bool
        - onQuizSetButtonBoxClicked(GdkEventButton*): bool
        - onQuizSetButtonClicked(filepath: Glib::ustring): bool
    }

    class QuizBox {
        ' - header_box: Gtk::Box
        ' - question_number_label: Gtk::Label
        ' - statistics_label: Gtk::Label
        ' - vertical_paned: Gtk::Paned
        ' - qa_notebook: Gtk::Notebook
        ' - question_label: Gtk::Label
        ' - explanation_label: Gtk::Label
        ' - previous_button: Gtk::Button
        ' - home_button: Gtk::Button
        ' - next_button: Gtk::Button
        ' - choice_button_list: Gtk::Button[]

        ' - onQaNotebookSwitchPage(page: Gtk::Widget*, guint page_num: guint): void
        ' - onPreviousButtonClicked(): void
        ' - onHomeButtonClicked(): void
        ' - onNextButtonClicked(): void
        ' - onChoiceButtonClicked(number: int): void
    }

    class CheckButtonWithKey<Key: class, Args: class...> {
        - _key: Key
        + CheckButtonWithKey(key: Key, ..args: Args)
        + getKey(): Key
    }

    AppWindow o-- HomeBox
    AppWindow o-- QuizBox
}

package "Quiz" {
    class QuizSet {
        - filepath: Glib::ustring
        - name: Glib::ustring
        - quiz_list: Quiz[]
        - correct_sum: int
        - question_sum: int

        + QuizSet(filepath: Glib::ustring)
        + getName(): Glib::ustring
        + loadQuiz(random_question: bool, random_choice: bool): void
        + getQuiz(number: int): Quiz
        + answerQuiz(number: int, answer: int): void
    }

    class Quiz {
        - question: Glib::ustring
        - choices: Glib::ustring[]
        - answer: int
        - correct_answer: int
        - explanation: Glib::ustring
    }

    QuizSet "1" *-- "*" Quiz
}

@enduml
